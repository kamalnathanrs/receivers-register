openapi: 3.0.3
info:
  title: Receiver Register - OpenAPI 3.0
  description: |
  version: 0.0.1
servers:
  - url: http://localhost:8080/receivers-register
tags:
  - name: User Receiver
    description: Resources related to maintaining receivers

paths:
  /bank-user/{user-id}/receiver:
    post:
      tags:
        - User Receiver
      summary: Adds an new receiver
      operationId: addReceiver
      parameters:
        - name: user-id
          in: path
          description: 'The bank user-id'
          required: true
          schema:
            type: string
      requestBody:
        description: Receiver object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Receiver'
      responses:
        '201':
          description: Added a new receiver to the bank user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receiver'
  /bank-user/{user-id}/receiver/{receiver-id}:
    put:
      tags:
        - User Receiver
      summary: Updates an exising receiver.
      operationId: updateReceiver
      parameters:
        - name: user-id
          in: path
          description: 'The bank user-id'
          required: true
          schema:
            type: string
        - name: receiver-id
          in: path
          description: 'The id of receiver whose information needs to be updated.'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Receiver'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receiver'
    delete:
      tags:
        - User Receiver
      summary: Deletes an receiver
      operationId: deleteReceiver
      parameters:
        - name: user-id
          in: path
          description: 'The bank user-id'
          required: true
          schema:
            type: string
        - name: receiver-id
          in: path
          description: 'The id of receiver whose information needs to be deleted.'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: The receiver successfully deleted.
  /bank-user/{user-id}/receivers:
    get:
      tags:
        - User Receiver
      summary: Fetch User receivers. Result will be empty if given userId does not exist in system.
      operationId: listUserReceivers
      parameters:
        - name: user-id
          in: path
          description: 'The bank user-id'
          required: true
          schema:
            type: string
        - name: pageNumber
          in: query
          description: The page number offset for the set of results returned.
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
        - name: entries
          in: query
          description: The number of entries to return from the total result set. The returned entries are offset by the page-number * entries values.
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 10
            maximum: 1000
      responses:
        '201':
          description: Added a new receiver to the bank user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserReceiversResult'
components:
  schemas:
    Receiver:
      type: object
      required:
        - name
        - IBAN
        - currency
      properties:
        receiverId:
          type: integer
          format: int64
          example: 1
          readOnly: true
        name:
          type: string
          description: Name of the receiver.
          example: John James
          pattern: '^[0-9\p{L}.,:;\-+\/&#()@ ]*$'
        fatherName:
          type: string
          description: Father's name of the receiver.
          example: Jim James
          pattern: '^[0-9\p{L}.,:;\-+\/&#()@ ]*$'
        email:
          type: string
          example: john@example.com
          pattern: '^.{0,4}$|^[\w!#$%&’*+/=?`{|}~^-]+(?:\.[\w!#$%&’*+/=?`{|}~^-]+)*@(?:[\S]+\.)+[a-zA-Z]{2,63}$'
          minLength: 5
          maxLength: 128
        mobile:
          type: string
          description: Mobile number of the receiver including country code.
          example: '004712345678'
          pattern: '^[+]([0-9]{1,3})[ ]([0-9]{1,12})$'
        IBAN:
          type: string
          description: IBAN value of the receiver.
          example: 'NO 93 8601 1117947'
          pattern: '^[0-9\p{L}.,:;\-+\/&#()@ ]*$'
        currency:
          type: string
          enum: [ EUR , DKK , NOK , USD  ]
          example: "NOK"
          description: A list of currency types to send
    UserReceiversResult:
      type: object
      properties:
        resultsFound:
          type: integer
          format: int32
          description: Total number of search results found for the given criteria.
        resultsFetched:
          type: integer
          format: int32
          description: Number of results fetched.
        receivers:
          type: array
          description: A list of Receivers found for the criteria.
          items:
            $ref: "#/components/schemas/Receiver"